on:
  push:
    branches:
      - gke-terraform-deploy
    # paths:
    # - 'apps/hello-app/**'
    # - 'infra/**'

env:
  PROJECT_ID: "deployment-demo-311509"
  IMAGE: hello-app
  TAG: v1
  ENVIRONMENT: dev

jobs:
  setup-build-publish:
    name: Container image - setup, build and publish
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
        project_id: ${{ env.PROJECT_ID }}

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |-
        gcloud --quiet auth configure-docker

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$TAG" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          --file apps/hello-app/Dockerfile .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$TAG"
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: setup-build-publish
    defaults:
      run:
        working-directory: infra
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.0
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="config/$ENVIRONMENT/backend.tfvars"

      - name: Terraform Plan
        id: plan
        run: terraform plan #-no-color
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/gke-terraform-deploy' && github.event_name == 'push'
      #   run: terraform apply -auto-approve
  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    environment:
        name: dev
    defaults:
      run:
        working-directory: infra
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.0
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="config/$ENVIRONMENT/backend.tfvars"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/gke-terraform-deploy' && github.event_name == 'push'
        run: terraform apply -auto-approve
